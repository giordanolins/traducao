<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 334762 Maintainer: none Status: ready -->
<section xml:id="intl.collator-constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 <para>
  <variablelist>
   <varlistentry xml:id="collator.constants.french-collation">
    <term>
     <constant>Collator::FRENCH_COLLATION</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      Ordena strings baseado na toniciade da palavra, iniciando pelo fim da string. Esse
      atributo está automaticamente definido como
      <emphasis>On</emphasis> (ativo)
      para as localidades francesas (e algumas outras). Há um custo de performance
      na comparação das strings quando esta opção está <emphasis>On</emphasis> (ativa),
      mas a chave de ordenação não é afetada. Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de FRENCH_COLLATION</title>
       <para>
        <simplelist>
         <member>F=OFF cote &lt; coté &lt; côte &lt; côté </member>
         <member>F=ON cote &lt; côte &lt; coté &lt; côté</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.alternate-handling">
    <term>
     <constant>Collator::ALTERNATE_HANDLING</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      O atributo "Alternate" é utilizado para controlar a manipulação dos chamados
      caracteres variáveis na UCA: espaço em branco, pontuação e símbolos. Se
      o atributo estiver definido como <emphasis>NonIgnorable</emphasis>
      (N), então as diferenças entre esses caracteres são de importância equivalente
      aos caracteres alfabéticos. Se o atributo estiver definido como
      <emphasis>Shifted</emphasis>
      (S), então esses caracteres são de menor importância. O valor
      <emphasis>Shifted</emphasis> é usado geralmente em combinação com
      o atributo <emphasis>Strength</emphasis>
      definido para "Quaternary". Nesse caso, espaços em branco, pontuação e símbolos
      são considerados na comparação de strings, mas apenas se todos os outros aspectos
      das strings (letras, acentos e caso) forem idênticos. Se
      o atributo "Alternate" não estiver definido como "Shifted", então não há diferença entre uma
      string com "Strength" 3 ou 4. Para mais informações e exemplos,
      consulte Variable_Weighting no
      <link xlink:href="&url.icu.uca;">UCA</link>.
      O motivo pelo qual os valores do atributo "Alternate" não serem simplesmente
      <emphasis>On</emphasis> e <emphasis>Off</emphasis>
      é que valores adicionais podem ser adicionados no futuro para o atributo "Alternate". A opção
      "Blanked" do UCA é expressada com o atributo "Strength" definido para 3, e "Alternate" definido para
      "Shifted". O padrão para a maioria das localidades é "NonIgnorable". Se o valor "Shifted" for
      selecionado, ele pode ser mais lento se houver muitas strings idênticas,
      exceto pela pontuação; o comprimento da chave de ordenação não será afetado a menos que o
      nível de força (strength) também seja aumentado.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::NON_IGNORABLE</constant>(padrão)</member>
       <member><constant>Collator::SHIFTED</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de ALTERNATE_HANDLING</title>
       <para>
        <simplelist>
         <member>
         S=3, A=N di Silva &lt; Di Silva &lt; diSilva &lt; U.S.A. &lt; USA
         </member>
         <member>
         S=3, A=S di Silva = diSilva &lt; Di Silva &lt; U.S.A. = USA
         </member>
         <member>
         S=4, A=S di Silva &lt; diSilva &lt; Di Silva &lt; U.S.A. &lt; USA
         </member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-first">
    <term>
     <constant>Collator::CASE_FIRST</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      O atributo "Case_First" é utilizado para controlar se as letras maiúsculas
      tem precedência às letras minúsculas ou vice-versa, na ausência de outras
      diferenças nas strings. Os valores possíveis são
      <emphasis>Uppercase_First</emphasis>
      (U) e <emphasis>Lowercase_First</emphasis>
      (L), além do valor padrão <emphasis>Default</emphasis>
      e <emphasis>Off</emphasis>.
      Quase não há diferença entre as opções "Off" e "Lowercase_First"
      em termos de resultados, então tipicamente os usuários não utilizarão
      Lowercase_First: apenas "Off" ou "Uppercase_First". (Os interessados no
      datalhamento da diferença entre X e L devem consultar a <literal>Collation
      Customization</literal>). Especificar L ou U não afeta a performance da comparação
      de strings, mas afeta o comprimento da chave de ordenação.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::LOWER_FIRST</constant></member>
       <member><constant>Collator::UPPER_FIRST</constant></member>
       <member><constant>Collator:DEFAULT</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de CASE_FIRST</title>
       <para>
        <simplelist>
         <member>C=X ou C=L "china" &lt; "China" &lt; "denmark" &lt; "Denmark"</member>
         <member>C=U "China" &lt; "china" &lt; "Denmark" &lt; "denmark"</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.case-level">
    <term>
     <constant>Collator::CASE_LEVEL</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      O atributo Case_Level é usado para ignorar a tonicidade mas não o caso. Nessas
      situações, define-se o atributo "Strength" como <emphasis>Primary</emphasis>,
      e o atributo "Case_Level" para <emphasis>On</emphasis>.
      Na maioria das localidades, essa configuração é "Off" (desativada) por padrão. Há um pequeno
      impacto na performance da comparação de strings e chave de ordenação caso esse atributo esteja
      definido como <emphasis>On</emphasis> (ativo).
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
     <para>
      <example>
       <title>Regras de CASE_LEVEL</title>
       <para>
        <simplelist>
         <member>S=1, E=X role = Role = rôle</member>
         <member>S=1, E=O role = rôle &lt; Role</member>
        </simplelist>
       </para>
      </example>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.normalization-mode">
    <term>
     <constant>Collator::NORMALIZATION_MODE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      A configuração de normalização determina se o texto será normalizado
      por inteiro ou não, no ato da comparação. Mesmo que a configuração esteja desativada (o que é
      o padrão para a maioria das localidades), o texto representado como no uso comum será
      comparado corretamente (para detalhes veja a UTN #5). Somente se as marcações de tonicidade
      estiverem em ordem não canônica é que haverão problemas. Se a configuração estiver
      <emphasis>On</emphasis> (ativa),
      então os melhores resultados são garantidos para todas as entradas possíveis de texto.
      Há um custo médio de performance na comparação de strings se este atributo
      estiver definido como <emphasis>On</emphasis>,
      dependendo da frequência das sequências que requerem normalização.
      Não há efeitos significantes no comprimento da chave de ordenação. Se o texto de entrada estiver
      nas formas NFD ou NFKD de normalização, não há necessidade de
      ativar essa opção de normalização.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.strength">
    <term>
     <constant>Collator::STRENGTH</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      O Serviço de Colação ICU suporta muitos níveis de comparação (chamados
      de "Levels", mas também conhecidos como "Strengths"). Usar essas categorias
      faz com que o ICU ordene as strings precisamente, de acordo com as convenções locais.
      Entretanto, permitir que os níveis sejam empregados seletivamente, pesquisando
      por uma string no texto, pode ser realizado com várias condições de comparação.
      Para informações mais detalhadas veja
      o capítulo sobre <function>collator_set_strength</function>.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::PRIMARY</constant></member>
       <member><constant>Collator::SECONDARY</constant></member>
       <member><constant>Collator::TERTIARY</constant>(padrão)</member>
       <member><constant>Collator::QUATERNARY</constant></member>
       <member><constant>Collator::IDENTICAL</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.hiragana-quaternary-mode">
    <term>
     <constant>Collator::HIRAGANA_QUATERNARY_MODE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      A compatibilidade com o JIS x 4061 requer a introdução de um nível
      adicional para distiguir os caracteres Hiragana e Katakana. Se a comparação
      com esse padrão for um requisito, então esse atributo deve ser definido
      para <emphasis>On</emphasis>,
      e a força (strength) definida para "Quaternary". Isto afetará o comprimento da
      chave de ordenação e a performance na comparação das strings.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.numeric-collation">
    <term>
     <constant>Collator::NUMERIC_COLLATION</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <para>
      Quando ativo, este atributo gera uma chave de colação para o valor
      numérico das substrings de dígitos. Essa é uma forma de obter o valor '100'
      ordenado APÓS o valor '2'.
     </para>
     <para>
      Os valores possíveis são:
      <simplelist>
       <member><constant>Collator::OFF</constant>(padrão)</member>
       <member><constant>Collator::ON</constant></member>
       <member><constant>Collator::DEFAULT_VALUE</constant></member>
      </simplelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-value">
    <term>
     <constant>Collator::DEFAULT_VALUE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.primary">
    <term>
     <constant>Collator::PRIMARY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.secondary">
    <term>
     <constant>Collator::SECONDARY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.tertiary">
    <term>
     <constant>Collator::TERTIARY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.default-strength">
    <term>
     <constant>Collator::DEFAULT_STRENGTH</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.quaternary">
    <term>
     <constant>Collator::QUATERNARY</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.identical">
    <term>
     <constant>Collator::IDENTICAL</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.off">
    <term>
     <constant>Collator::OFF</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.on">
    <term>
     <constant>Collator::ON</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.shifted">
    <term>
     <constant>Collator::SHIFTED</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.non-ignorable">
    <term>
     <constant>Collator::NON_IGNORABLE</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.lower-first">
    <term>
     <constant>Collator::LOWER_FIRST</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry xml:id="collator.constants.upper-first">
    <term>
     <constant>Collator::UPPER_FIRST</constant>
     (<type>integer</type>)
    </term>
    <listitem>
     <simpara>

     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>
